export const routerEvents = new EventTarget();const baseURL=new URL(window.originalHref||document.URL),basePath=baseURL.pathname.slice(0,baseURL.pathname.lastIndexOf("/"));const handleLinkClick=e=>{const t=e.target.closest("a");t&&t.href&&(e.preventDefault(),routerEvents.dispatchEvent(new CustomEvent("navigate",{detail:{url:basePath+(new URL(t.href)).pathname,a:t}})))},handleNavigate=e=>{pushState(null,null,e.detail.url)};export const interceptNavigation=e=>{e.addEventListener("click",handleLinkClick),routerEvents.addEventListener("navigate",handleNavigate)};export const handlePopState=e=>{routerEvents.dispatchEvent(new PopStateEvent("popstate",{state:e.state}))};window.addEventListener("popstate",handlePopState);export const pushState=(e,t,a)=>{history.pushState(e,t,a),routerEvents.dispatchEvent(new PopStateEvent("popstate",{state:e.state}))};export const matchesRoute=(e,t)=>{const a=e.startsWith("/")?basePath+"("+e+")":"("+e+")",o=new RegExp(`^${a.replaceAll("/","\\/")}${t?"$":""}`,"gi"),s=location.pathname;return o.exec(s)};customElements.define("view-route",class extends HTMLElement{_matches=[];get isActive(){return!!this._matches?.length}get matches(){return this._matches}set matches(e){this._matches=e,this.style.display=this.isActive?"contents":"none",this.isActive&&this.dispatchEvent(new CustomEvent("routechange",{detail:e,bubbles:!0}))}connectedCallback(){routerEvents.addEventListener("popstate",this),this.update()}disconnectedCallback(){routerEvents.removeEventListener("popstate",this)}handleEvent(e){this.update()}static get observedAttributes(){return["path","exact"]}attributeChangedCallback(){this.update()}update(){const e=this.getAttribute("path")||"/",t=this.hasAttribute("exact");this.matches=this.matchesRoute(e,t)||[]}matchesRoute(e,t){if("*"===e){if(!Array.from(this.parentNode.getElementsByTagName("view-route")).filter(e=>e.isActive).length)return[location.pathname,"*"]}else return matchesRoute(e,t);return null}});